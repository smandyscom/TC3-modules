<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.10">
  <POU Name="MAIN_C1A2" Id="{6fcdf15a-af94-459a-a482-90271b7275c8}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN_C1A2
VAR
	//Stations
	Controller : RunUnitController(argParent:= ADR(Controller), argSlotBase:= 0, argSlotLast:= 0);
	LifterCellularA : ARRAY[1..3] OF RunLifterCelluar(argParent:= ADR(Controller), 
									argSlotBase:= ADR(GVL.materialSlots[1]), 
									argSlotLast:= ADR(GVL.materialSlots[2]),
									argAxisVertical:= ADR(GVL.axisControls[1]),
									argAxisHorizon := ADR(Gvl.axisControls[1]),
									argCylinder:=ADR(GVL.cylinderControls[1]),		
									argObstacleSensor:= ADR(gvl.signalControls[1]),
									argReachSensor:= ADR(gvl.signalControls[1]));
	ConveyorProxy : RunUnitIndexerMaster(argParent:= ADR(Controller), 
												argSlotBase:= 0, 
												argSlotLast:= 0,
												argAxis:=0,
												argUpstream:=0);
	ConveyorMaster : RunUnitIndexerMasterCelluarA(argParent:= ADR(Controller), 
												argSlotBase:= ADR(GVL.materialSlots[1]), 
												argSlotLast:= ADR(GVL.materialSlots[3]),
												argAxis:=ADR(GVL.axisControls[1]),
												argUpstream:=ADR(ConveyorProxy));
	//TODO , cellular C/top view/bottom view
	//
	nCounter : INT; //comment
	
	//need to explicit call write persistance data , to store into non-violate memory
	writePersistance : WritePersistentData;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT GVL.bObjectsLinked THEN
	//link
	gvl.stations[1] := ADR(ConveyorMaster);
	//all station initialize (build relationship) , machine spcific configuration
	FOR nCounter := 1 TO 3 BY 1 DO
		LifterCellularA[nCounter].FB_init(
		bInitRetains:= FALSE, 
		bInCopyCode:= FALSE, 
		argParent:= ADR(Controller), 
		argSlotBase:= ADR(gvl.materialSlots[0+nCounter]), 
		argSlotLast:= ADR(gvl.materialSlots[0+nCounter]), 
		argAxisVertical:= ADR(gvl.axisControls[1+nCounter]),
		argAxisHorizon := ADR(gvl.axisControls[4+nCounter]),
		argCylinder:= ADR(gvl.cylinderControls[0+nCounter]),  
		argObstacleSensor:=ADR(gvl.signalControls[nCounter]) , 
		argReachSensor:= ADR(gvl.signalControls[nCounter+3]));
		//link
		gvl.stations[nCounter+1] := ADR(LifterCellularA[nCounter]);
	END_FOR
	//
	gvl.bObjectsLinked := TRUE; //self-locked
END_IF

Controller();//execute

ConveyorMaster.allHit := TRUE;
ConveyorMaster.allReach := TRUE;
ConveyorMaster.allRelease := true;
FOR nCounter := 1 TO 3 BY 1 DO
	LifterCellularA[nCounter].IsHit := ConveyorMaster.triggerHit;
	LifterCellularA[nCounter].IsReleased := ConveyorMaster.triggerRelease;
	//link
	ConveyorMaster.allHit := ConveyorMaster.allHit AND LifterCellularA[nCounter].IsHit;
	ConveyorMaster.allReach := ConveyorMaster.allReach AND LifterCellularA[nCounter].IsReach;
	ConveyorMaster.allRelease := ConveyorMaster.allRelease AND LifterCellularA[nCounter].IsReleased;
END_FOR
//lifterCelluarA.IsHit := masterCelluarA.triggerHit;
//lifterCelluarA.IsReleased := masterCelluarA.triggerRelease;
//masterCelluarA.allHit := lifterCelluarA.IsHit;
//masterCelluarA.allReach := lifterCelluarA.IsReach;
//masterCelluarA.allRelease := lifterCelluarA.IsReleased;

writePersistance(
		NETID:= , 
		PORT:= 851, 
		START:= , 
		TMOUT:= , 
		BUSY=> , 
		ERR=> , 
		ERRID=> );]]></ST>
    </Implementation>
    <LineIds Name="MAIN_C1A2">
      <LineId Id="28" Count="22" />
      <LineId Id="5" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="126" Count="1" />
      <LineId Id="108" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="117" Count="0" />
      <LineId Id="119" Count="2" />
      <LineId Id="124" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="110" Count="3" />
      <LineId Id="109" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="101" Count="6" />
      <LineId Id="100" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>