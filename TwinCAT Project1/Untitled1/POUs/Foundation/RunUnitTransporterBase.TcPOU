<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.10">
  <POU Name="RunUnitTransporterBase" Id="{05eb4ac2-43a3-44ce-8012-78838d9522d6}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK RunUnitTransporterBase EXTENDS RunUnitGeneric
VAR_INPUT
	syncAcknowledged : BOOL; //downstream replied starting ackowledge , face to downstream
END_VAR
VAR_OUTPUT
	syncEngaged : BOOL; //inform downstream i am ready , face to downstream
	syncMatValue : LINT := 0;
END_VAR
VAR	
	Upstream : POINTER TO RunUnitTransporterBase;//upstream linkage
	//proxy mode
	isProxyMode : BOOL := FALSE;
	
	fbAdsSyncRead : ADSREAD;
	fbAdsSyncWrite : ADSWRITE;
	fbAdsMatSyncRead : ADSREAD;
	
	isMatSync : BOOL := FALSE;
	
END_VAR
VAR PERSISTENT
	//proxy mode parameters
	netId : T_AmsNetID;
	port : T_AmsPort := 851; //Tc3
	indexGroup : UDINT := TO_UDINT(eAdsIndexGroups.PLCADS_RWM);
	
	offsetUpstreamSyncEngaged : UDINT := 127;
	offsetUpstreamSyncAckowledged  : UDINT := 128;
	offsetUpstreamSyncMatSync : UDINT := 130; //64bits
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//non proxy 	
SUPER^();
// Handshaking sequence (face to upstream
IF Upstream <> 0 AND_THEN NOT Upstream^.syncEngaged THEN
	Upstream^.syncAcknowledged := FALSE; //reset upstream
END_IF

IF NOT isProxyMode THEN
	RETURN;
END_IF

//do ADS data exchanging
fbAdsSyncRead(
		NETID:= netId, 
		PORT:= port, 
		IDXGRP:= indexGroup, 
		IDXOFFS:= offsetUpstreamSyncEngaged, 
		LEN:= SIZEOF(syncEngaged), 
		DESTADDR:= ADR(syncEngaged), 
		READ:= not fbAdsSyncRead.BUSY, 
		TMOUT:= , 
		BUSY=> , 
		ERR=> , 
		ERRID=> );
		
fbAdsSyncWrite(
		NETID:= netId, 
		PORT:= port, 
		IDXGRP:= indexGroup, 
		IDXOFFS:= offsetUpstreamSyncAckowledged, 
		LEN:= SIZEOF(syncAcknowledged), 
		SRCADDR:= ADR(syncAcknowledged), 
		WRITE:= NOT fbAdsSyncWrite.BUSY, 
		TMOUT:= , 
		BUSY=> , 
		ERR=> , 
		ERRID=> );
	
fbAdsMatSyncRead(
		NETID:= netId, 
		PORT:= port, 
		IDXGRP:= indexGroup, 
		IDXOFFS:= offsetUpstreamSyncMatSync, 
		LEN:= SIZEOF(syncMatValue), 
		DESTADDR:= ADR(syncMatValue), 
		READ:= NOT fbAdsMatSyncRead.BUSY AND isMatSync, 
		TMOUT:= , 
		BUSY=> , 
		ERR=> , 
		ERRID=> );	
		

CASE State OF
	0:
		IF syncEngaged AND NOT syncAcknowledged THEN
			isMatSync:= TRUE; //start mat sync
			bSerialTransition := TRUE;
		END_IF
	1: 
		IF NOT fbAdsMatSyncRead.READ THEN
			//done
			isMatSync := FALSE;
			NextState := 0;
		END_IF
END_CASE
	]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{a8c98733-d54c-4b9b-8f3c-27eb23521d1d}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	
	argParent : POINTER TO RunUnitGeneric;
	argSlotBase : POINTER TO MaterialBlock;
	argSlotLast : POINTER TO MaterialBlock;
	
	argUpstream : POINTER TO RunUnitTransporterBase;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//initialize 
Parent := argParent;
SlotBase := argSlotBase;
SlotLast := argSlotLast;

Upstream := argUpstream;

IF Upstream=0 THEN
	isProxyMode:=TRUE; //no upstream , i am proxy
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="RunUnitTransporterBase">
      <LineId Id="538" Count="64" />
      <LineId Id="329" Count="0" />
    </LineIds>
    <LineIds Name="RunUnitTransporterBase.FB_init">
      <LineId Id="15" Count="4" />
      <LineId Id="21" Count="3" />
      <LineId Id="11" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>