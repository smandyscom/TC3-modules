<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.10">
  <POU Name="RunUnitIndexerMaster" Id="{2551b589-75e5-432e-8b87-41fecbcdc1e1}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK RunUnitIndexerMaster EXTENDS RunUnitTransporterBase
VAR		
	Axis : POINTER TO RunAxis; //axis reference
	
	//Working registers
	matIsValidStatus : DWORD;
	
	nCounter : INT;
	condition : BOOL;
	
	isLastSlotOccupied : BOOL; //indicate if last slot occupied
	
END_VAR
VAR PERSISTENT
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^(); // call base class's execution

CASE SUPER^.State OF
	//0:
		//TODO Initialize?	
	
		//FOR nCounter:=1 TO 3 BY 1 DO
		//	slaveWorkingSignal[nCounter] := slaveLinkageStatus[nCounter];
		//END_FOR
		//bSerialTransition := TRUE;
	0,1:
		//if all working status meets , transition
		//all working signal should be zero
		//seted by downstream
		IF syncEngaged AND syncAcknowledged THEN
			syncEngaged := FALSE; //reset
		END_IF
		
		condition :=TRUE;
		FOR nCounter:=1 TO 3 BY 1 DO
			condition := condition AND NOT slaveWorkingSignal[nCounter];
		END_FOR
		//TODO check material synchronization to Databse
		//raise working signals for all linked slave
		IF condition AND NOT syncAcknowledged THEN
		
			//Do data shifting (move is valid/id)
			FOR nCounter:=SlotCount TO 2 BY 1 DO	
				IF nCounter = SlotCount THEN
					syncMatValue:= SlotBase[nCounter].id; // for the last slot
				END_IF
				SlotBase[nCounter].id := SlotBase[nCounter-1].id;
				SlotBase[nCounter].wordOut.0 := SlotBase[nCounter-1].wordOut.0;
			END_FOR
			
			bSerialTransition := TRUE;
						
			isLastSlotOccupied := SlotLast^.wordOut.0; //check out last slot status
		END_IF
	2:
		//2 modes
		// a. synchronize with downstream only, go with pull upstream if avialable
		// b. synchronize with down/upstream both
	
		// pull by downstream (set on then check off
		// pull upstream (check on then reset
		
		IF isLastSlotOccupied AND NOT syncEngaged THEN
			syncEngaged := TRUE;//ready to synchronizing (communicate with downstream
			//syncMaterialId:= SlotLast^.id;
		END_IF
		
		//listen to move
		bSerialTransition :=  (NOT isLastSlotOccupied) OR (syncAcknowledged AND isLastSlotOccupied);
		
		
		
		//once going pull upstream working together
		//IF bSerialTransition AND Upstream <> 0 THEN
		//	Upstream^.syncAcknowledged := Upstream^.syncEngaged;
		//END_IF
		
	3:
		//do shifting movement
END_CASE

// Handshaking sequence (face to upstream
IF Upstream <> 0 AND_THEN NOT Upstream^.syncEngaged THEN
	Upstream^.syncAcknowledged := FALSE; //reset upstream
END_IF
]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{b6ef164b-1316-42c1-8dbc-2d2d314e57b5}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	
	argParent : POINTER TO RunUnitGeneric;
	argSlotBase : POINTER TO MaterialBlock;
	argSlotLast : POINTER TO MaterialBlock;
	
	argUpstream : POINTER TO RunUnitTransporterBase;
	argAxis : POINTER TO RunAxis;

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//initialize 
Parent := argParent;
SlotBase := argSlotBase;
SlotLast := argSlotLast;

Axis := argAxis;
Upstream := argUpstream;

IF Upstream=0 THEN
	isProxyMode:=TRUE; //no upstream , i am proxy
END_IF
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="RunUnitIndexerMaster">
      <LineId Id="295" Count="4" />
      <LineId Id="412" Count="0" />
      <LineId Id="301" Count="6" />
      <LineId Id="390" Count="2" />
      <LineId Id="388" Count="1" />
      <LineId Id="308" Count="3" />
      <LineId Id="387" Count="0" />
      <LineId Id="386" Count="0" />
      <LineId Id="312" Count="0" />
      <LineId Id="395" Count="1" />
      <LineId Id="399" Count="0" />
      <LineId Id="402" Count="0" />
      <LineId Id="404" Count="1" />
      <LineId Id="410" Count="1" />
      <LineId Id="401" Count="0" />
      <LineId Id="397" Count="0" />
      <LineId Id="313" Count="1" />
      <LineId Id="316" Count="0" />
      <LineId Id="318" Count="8" />
      <LineId Id="378" Count="0" />
      <LineId Id="380" Count="0" />
      <LineId Id="398" Count="0" />
      <LineId Id="381" Count="0" />
      <LineId Id="379" Count="0" />
      <LineId Id="327" Count="2" />
      <LineId Id="333" Count="14" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="RunUnitIndexerMaster.FB_init">
      <LineId Id="34" Count="3" />
      <LineId Id="43" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="60" Count="1" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>