<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.10">
  <POU Name="RunUnitIndexerMaster" Id="{2551b589-75e5-432e-8b87-41fecbcdc1e1}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK RunUnitIndexerMaster EXTENDS RunUnitTransporterBase
VAR		
	Axis : POINTER TO RunAxis; //axis reference
	
	//Working registers
	nCounter : DINT;
	
	isLastSlotOccupied : BOOL; //indicate if last slot occupied
	
END_VAR
VAR PERSISTENT
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^(); // call base class's execution

CASE SUPER^.outputState OF
	0:
		//FOR nCounter:=1 TO 3 BY 1 DO
		//	slaveWorkingSignal[nCounter] := slaveLinkageStatus[nCounter];
		//END_FOR
		//bSerialTransition := TRUE;
		
		//------------------------------------------
		//check material synchronization to Databse
		//All slot act must be off
		//------------------------------------------
		bSerialTransition := TRUE;
		FOR nCounter:=0 TO SlotCount-1 BY 1 DO
			bSerialTransition := bSerialTransition AND NOT SlotBase[nCounter].Act;
		END_FOR
	1:
		//if all working status meets , transition
		//all working signal should be zero
		//seted by downstream
		IF syncEngaged AND syncAcknowledged THEN
			syncEngaged := FALSE; //reset
		END_IF
		//all working signal should be off
		IF NOT transitionByte.0 THEN
			transitionByte.0 := TRUE;
			FOR nCounter:= 1 TO 32 BY 1 DO
				transitionByte.0 := transitionByte.0 AND NOT slaveWorkingSignal[nCounter];
			END_FOR
		END_IF
		//raise working signals for all linked slave
		IF transitionByte.0 AND NOT syncAcknowledged THEN
			//move last slot's information to buffer area
			syncMatId:= SlotLast^.Id; // for the last slot
			syncMatValid := SlotLast^.Valid;// ready to sync
			//Do data shifting (move is valid/id)
			FOR nCounter:=SlotCount TO 2 BY -1 DO	
				SlotBase[nCounter].Id := SlotBase[nCounter-1].id;
				SlotBase[nCounter].Valid := SlotBase[nCounter-1].Valid;
			END_FOR
				
			bSerialTransition := TRUE;
						
			isLastSlotOccupied := SlotLast^.Valid; //check out last slot status
		ELSE
			//neither some work station working nor acknowledge not off
		END_IF
	2:
		//2 modes
		// a. synchronize with downstream only, go with pull upstream if avialable
		// b. synchronize with down/upstream both
	
		// pull by downstream (set on then check off
		// pull upstream (check on then reset
		
		IF isLastSlotOccupied AND NOT syncEngaged THEN
			syncEngaged := TRUE;//ready to synchronizing (communicate with downstream
		END_IF
		
		//listen to move
		bSerialTransition :=  (NOT isLastSlotOccupied) OR (syncAcknowledged AND isLastSlotOccupied);
	3:
		//---------------------
		//do shifting movement
		//---------------------
END_CASE
]]></ST>
    </Implementation>
    <Method Name="FB_init" Id="{b6ef164b-1316-42c1-8dbc-2d2d314e57b5}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	
	argParent : POINTER TO RunUnitGeneric;
	argSlotBase : POINTER TO RunMaterial;
	argSlotLast : POINTER TO RunMaterial;
	
	argUpstream : POINTER TO RunUnitTransporterBase;
	argAxis : POINTER TO RunAxis;

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//initialize 
Parent := argParent;
SlotBase := argSlotBase;
SlotLast := argSlotLast;

Axis := argAxis;
Upstream := argUpstream;

IF Upstream=0 THEN
	isProxyMode:=TRUE; //no upstream , i am proxy
END_IF

//calculate how much slot related
SlotCount :=  TO_INT((SlotLast-SlotBase)/SIZEOF(RunMaterial) + 1);]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="RunUnitIndexerMaster">
      <LineId Id="460" Count="8" />
      <LineId Id="542" Count="0" />
      <LineId Id="469" Count="1" />
      <LineId Id="543" Count="0" />
      <LineId Id="471" Count="19" />
      <LineId Id="530" Count="0" />
      <LineId Id="491" Count="0" />
      <LineId Id="528" Count="0" />
      <LineId Id="492" Count="1" />
      <LineId Id="497" Count="19" />
      <LineId Id="518" Count="4" />
      <LineId Id="544" Count="0" />
      <LineId Id="523" Count="0" />
      <LineId Id="545" Count="0" />
      <LineId Id="524" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="RunUnitIndexerMaster.FB_init">
      <LineId Id="34" Count="3" />
      <LineId Id="43" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="60" Count="1" />
      <LineId Id="76" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>