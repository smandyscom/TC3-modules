<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.0">
  <POU Name="RunUnitControllerV1" Id="{dbefb355-befd-4ccc-b7d8-49a15cbd5d5f}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK RunUnitControllerV1 EXTENDS RunUnitGeneric
VAR_INPUT
END_VAR
VAR_OUTPUT
	currentMode : eOperationModes := eOperationModes.MANUAL; //default in semi-auto
	isInitializing : BOOL;
	isError : BOOL;
	
END_VAR
VAR		
	nCounter : INT;
	bAllInitialized : BOOL := FALSE;
	
	//user control
	requestInitialize : BOOL;
	//error
	requestErrorClear : eErrorClearWays := eErrorClearWays.NO_ACTION;
	errorDevice : POINTER TO CommonBase := 0; //null reference
	errorType : eCategrories;
	errorIndex : INT;
	errorCode : UDINT;
	errorDelayDetect : TON;	
	//HMI Control interface
	interfaceControl : POINTER TO InterfaceControlV1;
	interfaceManual : POINTER TO InterfaceManualV1;
	
	pbRed : POINTER TO RunSignal;
	pbGreen : POINTER TO RunSignal;
	pbYellow : POINTER TO RunSignal;
END_VAR
VAR PERSISTENT
	axisUpperBound : INT;
	cylinderUpperBound : INT;
	signalUpperBound : INT;
	unitUpperBound : INT;
	slotUpperBound : int;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//scan running all devices
FOR nCounter :=1 TO axisUpperBound BY 1 DO
	gvl.axisControls[nCounter]();
	//error detection
	IF errorDevice=0 AND errorDelayDetect.Q AND gvl.axisControls[nCounter].ErrorDetect() <> 0 THEN
		//error scaned
		interfaceControl^.errorIndex := TO_DWORD(nCounter-1);
		errorDevice := ADR(gvl.axisControls[nCounter]);
	END_IF
END_FOR
FOR nCounter :=1 TO cylinderUpperBound BY 1 DO
	gvl.cylinderControls[nCounter]();
	//error detection
	IF errorDevice=0 AND errorDelayDetect.Q AND gvl.cylinderControls[nCounter].ErrorDetect() <> 0 THEN
		//error scaned
		interfaceControl^.errorIndex := TO_DWORD(nCounter-1);
		errorDevice := ADR(gvl.cylinderControls[nCounter]);
	END_IF
END_FOR
FOR nCounter :=1 TO signalUpperBound BY 1 DO
	gvl.signalControls[nCounter]();
END_FOR
FOR nCounter :=1 TO unitUpperBound BY 1 DO
	//error detection
	IF errorDevice=0 AND errorDelayDetect.Q AND gvl.units[nCounter] <> 0 AND_THEN gvl.units[nCounter]^.ErrorDetect() <> 0THEN
		//station
		interfaceControl^.errorIndex := TO_DWORD(nCounter-1);
		errorDevice := gvl.units[nCounter];
	END_IF
END_FOR
//routines
errorDelayDetect(IN:= (errorDevice = 0), PT:= T#100MS, Q=> , ET=> );	//after reset , wait 100ms to detect
IF errorDevice <>0 THEN
	//errorIndex := nCounter-1;
	interfaceControl^.errorType := errorDevice^.TypeCode();
	interfaceControl^.errorCode := errorDevice^.ErrorDetect();
		
	ErrorHandler();// handling user-input reset/ignore
ELSE
	//reset
	interfaceControl^.errorType := 0;
	interfaceControl^.errorIndex := 0;
	interfaceControl^.errorCode := 0;
END_IF
isError := errorDevice <>0;
//reflect to interface
interfaceManual^(
	currentMode:= THIS^.currentMode); //scan-in,scan-out,manual...
//handling input request
interfaceControl^(
	currentMode:= THIS^.currentMode,
	pbGreen := pbGreen^.debouncedOn,
	pbRed := pbRed^.debouncedOn,
	pbYellow := pbYellow^.debouncedOn,
	errorClear=> THIS^.requestErrorClear);
IF interfaceControl^.requestInit THEN
	requestInitialize := TRUE; // memorize
END_IF
//mode switcher pre-check
bPause := NOT (currentMode = eOperationModes.AUTO);
IF interfaceControl^.requestMode <> currentMode THEN
	CASE interfaceControl^.requestMode OF 
		eOperationModes.MANUAL,eOperationModes.SEMI_AUTO:
			//direct changes
			currentMode := interfaceControl^.requestMode;
		eOperationModes.AUTO:
			//check : no error , manual channel work done
			IF errorDevice=0 THEN
				currentMode := eOperationModes.AUTO;
			ELSE
				//refuce to change , maintain
			END_IF 
	END_CASE
END_IF
//
CASE currentMode OF	
		eOperationModes.AUTO,eOperationModes.SEMI_AUTO:
		//running sequences
		FOR nCounter :=1 TO unitUpperBound BY 1 DO
			IF gvl.units[nCounter] <> 0 THEN
				gvl.units[nCounter]^();
			END_IF
		END_FOR
		
		IF  requestInitialize THEN
			//initialize all stations
			bAllInitialized := TRUE;
			interfaceControl^.state := TO_WORD(eSpecialStates.MAIN_INITIALIZING); //status reflection
			
			FOR nCounter:=1 TO unitUpperBound BY 1 DO
				IF gvl.units[nCounter] <> 0 THEN
					// if every station comes initialized
					bAllInitialized := bAllInitialized AND gvl.units[nCounter]^.Initialize();
				END_IF
			END_FOR
			IF bAllInitialized THEN
				FOR nCounter:=1 TO unitUpperBound BY 1 DO
					IF gvl.units[nCounter] <> 0 THEN
						gvl.units[nCounter]^.NextState := 0; //start working
					END_IF
				END_FOR	
				requestInitialize := FALSE; //clear after done
				//---------------------------------
				//	Clear all material valid status
				//---------------------------------
				FOR nCounter:=1 TO slotUpperBound BY 1 DO
					gvl.materialSlots[nCounter].Valid := FALSE;
				END_FOR
				
				interfaceControl^.state := TO_WORD(eSpecialStates.MAIN_INITIALIZED); //status reflection
			END_IF
		END_IF		
END_CASE

//status reflect
isInitializing := requestInitialize AND NOT bAllInitialized;
//
]]></ST>
    </Implementation>
    <Method Name="ErrorHandler" Id="{a0eb5aec-6465-4175-9953-8d5b0f3a2dc2}">
      <Declaration><![CDATA[METHOD ErrorHandler : BOOL
VAR_INPUT
END_VAR
VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//once error scanned
IF currentMode = eOperationModes.AUTO THEN
	//once error deteted and in AUTO mode , forcely switch to SEMI_AUTO
	currentMode := eOperationModes.SEMI_AUTO;
END_IF
//reset error handling
IF requestErrorClear <> eErrorClearWays.NO_ACTION THEN
	errorDevice^.ErrorClear(requestErrorClear); //call error clear function
	requestErrorClear := eErrorClearWays.NO_ACTION;
	errorDevice := 0 ;// cut link
END_IF

]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{1060438f-10b7-4590-a96e-41200ea3be54}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	
	argParent : POINTER TO RunUnitGeneric;
	argSlotBase : POINTER TO RunMaterial;
	argSlotLast : POINTER TO RunMaterial;
	
	argPbRed : POINTER TO RunSignal;
	argPbGreen : POINTER TO RunSignal;
	argPbYellow : POINTER TO RunSignal;
	
	argInterfaceControl : POINTER TO InterfaceControlV1;
	argInterfaceManual : POINTER TO InterfaceManualV1;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//initialize 
Parent := argParent;
SlotBase := argSlotBase;
SlotLast := argSlotLast;
//
IF bInitRetains THEN
	NextState := eSpecialStates.INITIAL_BEGIN;
END_IF
//input
pbRed := argPbRed;
pbGreen := argPbGreen;
pbYellow := argPbYellow;

interfaceControl := argInterfaceControl;
interfaceManual := argInterfaceManual;

interfaceControl^.state := TO_WORD(eSpecialStates.MAIN_WAIT_INITIALIZING);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Initialize" Id="{cb68dc91-f1ca-48a3-a360-7027131d9307}">
      <Declaration><![CDATA[METHOD Initialize : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="RunUnitControllerV1">
      <LineId Id="304" Count="0" />
      <LineId Id="686" Count="1" />
      <LineId Id="713" Count="1" />
      <LineId Id="718" Count="0" />
      <LineId Id="917" Count="0" />
      <LineId Id="719" Count="0" />
      <LineId Id="716" Count="0" />
      <LineId Id="688" Count="0" />
      <LineId Id="690" Count="1" />
      <LineId Id="699" Count="2" />
      <LineId Id="918" Count="0" />
      <LineId Id="724" Count="0" />
      <LineId Id="702" Count="0" />
      <LineId Id="692" Count="5" />
      <LineId Id="707" Count="1" />
      <LineId Id="919" Count="0" />
      <LineId Id="723" Count="0" />
      <LineId Id="709" Count="0" />
      <LineId Id="698" Count="0" />
      <LineId Id="258" Count="0" />
      <LineId Id="621" Count="0" />
      <LineId Id="595" Count="0" />
      <LineId Id="602" Count="0" />
      <LineId Id="597" Count="3" />
      <LineId Id="956" Count="0" />
      <LineId Id="962" Count="0" />
      <LineId Id="958" Count="1" />
      <LineId Id="957" Count="0" />
      <LineId Id="594" Count="0" />
      <LineId Id="880" Count="0" />
      <LineId Id="652" Count="0" />
      <LineId Id="651" Count="0" />
      <LineId Id="761" Count="0" />
      <LineId Id="456" Count="0" />
      <LineId Id="448" Count="1" />
      <LineId Id="833" Count="2" />
      <LineId Id="452" Count="0" />
      <LineId Id="490" Count="2" />
      <LineId Id="325" Count="0" />
      <LineId Id="795" Count="0" />
      <LineId Id="347" Count="0" />
      <LineId Id="350" Count="2" />
      <LineId Id="356" Count="3" />
      <LineId Id="361" Count="2" />
      <LineId Id="365" Count="0" />
      <LineId Id="348" Count="1" />
      <LineId Id="269" Count="1" />
      <LineId Id="274" Count="1" />
      <LineId Id="506" Count="0" />
      <LineId Id="509" Count="0" />
      <LineId Id="511" Count="1" />
      <LineId Id="508" Count="0" />
      <LineId Id="545" Count="0" />
      <LineId Id="548" Count="0" />
      <LineId Id="565" Count="0" />
      <LineId Id="550" Count="0" />
      <LineId Id="998" Count="1" />
      <LineId Id="551" Count="12" />
      <LineId Id="1087" Count="0" />
      <LineId Id="1090" Count="1" />
      <LineId Id="1088" Count="0" />
      <LineId Id="1093" Count="1" />
      <LineId Id="1089" Count="0" />
      <LineId Id="1000" Count="0" />
      <LineId Id="564" Count="0" />
      <LineId Id="546" Count="0" />
      <LineId Id="276" Count="0" />
      <LineId Id="842" Count="0" />
      <LineId Id="841" Count="0" />
      <LineId Id="843" Count="0" />
      <LineId Id="1048" Count="0" />
      <LineId Id="1050" Count="0" />
    </LineIds>
    <LineIds Name="RunUnitControllerV1.ErrorHandler">
      <LineId Id="122" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="125" Count="1" />
      <LineId Id="100" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="104" Count="1" />
      <LineId Id="102" Count="0" />
      <LineId Id="21" Count="0" />
    </LineIds>
    <LineIds Name="RunUnitControllerV1.FB_init">
      <LineId Id="12" Count="7" />
      <LineId Id="28" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="20" Count="1" />
      <LineId Id="60" Count="2" />
      <LineId Id="43" Count="0" />
      <LineId Id="42" Count="0" />
    </LineIds>
    <LineIds Name="RunUnitControllerV1.Initialize">
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>